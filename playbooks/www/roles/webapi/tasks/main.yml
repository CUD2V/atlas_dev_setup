---

- name: install jdk, maven, tomcat
  apt:
    name:
      - openjdk-8-jdk
      - maven
      - tomcat8
    state: latest
    update_cache: true

- name: clone ohdsi webapi
  git:
    repo: https://github.com/OHDSI/WebAPI.git
    dest: "{{ www_download_dir }}/WebAPI"
# TODO  Build fails if try to pin to v2.6.0 revisit once there is a v2.7.0
#   https://github.com/OHDSI/WebAPI/pull/708
#   version: v2.6.0

- name: Ensures {{www_download_dir}}/WebAPI/WebAPIConfig dir exists
  file: path={{www_download_dir}}/WebAPI/WebAPIConfig state=directory

- name: copy settings.j2 file to remote server
  template:
    src: "{{ role_path }}/files/settings.j2"
    dest: "{{ www_download_dir }}/WebAPI/WebAPIConfig/settings.xml"

# echo $(readlink -f /usr/bin/javac | sed 's:/bin/javac::')
- name: set JAVA_HOME
  lineinfile:
    path: /etc/environment
    regexp: '^JAVA_HOME='
    line: 'JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64'

- name: build WebAPI
  command: mvn clean package -s WebAPIConfig/settings.xml -P webapi-postgresql
  args:
    chdir: "{{ www_download_dir }}/WebAPI"
    creates: "{{ www_download_dir }}/WebAPI/target/WebAPI.war"

- name: deploy WAR
  command: "cp {{ www_download_dir }}/WebAPI/target/WebAPI.war /var/lib/tomcat8/webapps/"
  args:
    creates: "/var/lib/tomcat8/webapps/WebAPI.war"
  register: result
  notify:
    - restart tomcat

- name: force run of notified handlers, since WAR deploy requires restart to create webapi schema
  meta: flush_handlers

- name: copy helper script
  copy:
    src: "{{ role_path }}/files/count_rows.sh"
    dest: "{{ www_download_dir }}/count_rows.sh"
    mode: "a+x"

- name: copy sql templates
  template:
    src: "{{ role_path }}/files/webapi_link.j2"
    dest: "{{ www_download_dir }}/webapi_link.sql"

# to allow for upserts
- name: add constraint to webpai.source_daimon
  shell: "psql {{ db_name }} -c 'CREATE UNIQUE INDEX IF NOT EXISTS source_id_source_daimon_id ON webapi.source_daimon(source_id, source_daimon_id)'"
  become: yes
  become_user: postgres
  changed_when: false

- name: link webapi.source and webapi.source_daimon and confirm configuration is correct
  shell: "psql -tAX ohdsi -f {{ www_download_dir }}/webapi_link.sql | {{ www_download_dir }}/count_rows.sh"
  become: true
  become_user: postgres
  register: rows_inserted
  changed_when: rows_inserted.stdout != "0"
  notify:
      - restart tomcat
      - verify WebAPI


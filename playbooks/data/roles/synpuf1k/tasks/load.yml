---

- name: create link_data.sql on remote
  template: src={{item.src}} dest={{item.dest}}
  with_items:
  - src: "{{ role_path }}/files/link_data.j2"
    dest: "{{ data_download_dir }}/ohdsi/sql/link_data.sql"

- name: "find all datafiles in {{ data_download_dir }}/{{ data_dataset }}"
  find:
    paths: "{{ data_download_dir }}/{{ data_dataset }}"
    patterns: "*.csv"
  register: data

- name: build sql COPY commands based on files in data and vocab dirs
  template:
    src: "{{ role_path }}/files/load.j2"
    dest: "{{ data_download_dir }}/ohdsi/sql/load_{{ item.name }}.sql"
  with_items:
  - { name: data, files: "{{ data.files }}", directory: "{{ data_download_dir }}/{{ data_dataset }}", arguments: DELIMITER E'\t' CSV ENCODING 'UTF8'}

- name: "create {{ data_dataset }} schema"
  include_role:
    name: cdm
    tasks_from: create_schema
  vars:
    schema: "{{ data_dataset }}"

## sql commands are not idempotent. Rerunning causes issues
## getting around this by creating a log file after sql runs,
## so manually have to remove that file if want to rerun.
- name: load data
  shell: psql ohdsi -f "{{ item }}"
  become: true
  become_user: postgres
  args:
    chdir: "{{data_download_dir}}/ohdsi/sql"
    creates: "{{data_download_dir}}/ohdsi/sql/{{ data_dataset }}_load.log"
  with_items:
  - OMOP CDM ddl - PostgreSQL.sql
  - load_data.sql
  - OMOP CDM constraints - PostgreSQL.sql
  - OMOP CDM indexes required - PostgreSQL.sql
  register: result
  environment:
    PGOPTIONS: --search_path={{ data_dataset }}

- name: "create {{ data_dataset }}_load_run.txt"
  copy:
    content: "{{ result }}"
    dest: "{{data_download_dir}}/ohdsi/sql/{{ data_dataset }}_load.log"
    force: no

- name: "grant permissions on {{ data_dataset }} schema"
  include_role:
    name: cdm
    tasks_from: grant_permissions
  vars:
    schema: "{{ data_dataset }}"

- name: "create {{ data_dataset }}_results schema"
  include_role:
    name: cdm
    tasks_from: create_schema
  vars:
    schema: "{{ data_dataset }}_results"

- name: create results schema
  shell: psql ohdsi -f "{{ item }}"
  become: true
  become_user: postgres
  args:
    chdir: "{{data_download_dir}}/ohdsi/sql"
    creates: "{{data_download_dir}}/ohdsi/sql/{{ data_dataset }}_results.log"
  with_items:
  - OMOP CDM ddl - PostgreSQL.sql
  #Not required until CDM v6.0
  #  - OMOP CDM Results postgresql ddl.txt
  - OMOP CDM constraints - PostgreSQL.sql
  - OMOP CDM indexes required - PostgreSQL.sql
  register: results
  environment:
    PGOPTIONS: --search_path={{ data_dataset }}_results

- name: "create results_run.txt"
  copy:
    content: "{{ results }}"
    dest: "{{data_download_dir}}/ohdsi/sql/{{ data_dataset }}_results.log"
    force: no

- name: "grant permissions on {{ data_dataset }}_results schema"
  include_role:
    name: cdm
    tasks_from: grant_permissions
  vars:
    schema: "{{ data_dataset }}_results"

#http://www.ohdsi.org/web/wiki/doku.php?id=documentation:software:webapi:source_configuration
- name: add entry to webapi.source and webapi.source_daimon
  shell: psql ohdsi -f link_data.sql
  become: true
  become_user: postgres
  args:
    chdir: "{{data_download_dir}}/ohdsi/sql"
    creates: "{{data_download_dir}}/ohdsi/sql/{{ data_dataset }}_add_daemons.log"
  register: link

- name: "create {{ data_dataset }}_add_daemons_run.log"
  copy:
    content: "{{ link }}"
    dest: "{{data_download_dir}}/ohdsi/sql/{{ data_dataset }}_add_daemons.log"
    force: no

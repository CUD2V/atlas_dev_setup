---

- name: install jdk, maven, tomcat
  apt:
    name:
      - default-jdk
      - maven
      - tomcat8
    state: latest
    update_cache: true

- name: clone ohdsi webapi
  git:
    repo: https://github.com/OHDSI/WebAPI.git
    dest: "{{ download_dir }}/WebAPI"

- name: Ensures {{download_dir}}/WebAPI/WebAPIConfig dir exists
  file: path={{download_dir}}/WebAPI/WebAPIConfig state=directory

- name: copy settings.j2 file to remote server
  template:
    src: "{{ role_path }}/files/settings.j2"
    dest: "{{ download_dir }}/WebAPI/WebAPIConfig/settings.xml"

- name: build WebAPI
  command: mvn clean package -s WebAPIConfig/settings.xml -P webapi-postgresql
  args:
    chdir: "{{ download_dir }}/WebAPI"
    creates: "{{ download_dir }}/WebAPI/target/WebAPI.war"
  environment:
    # TODO set this dynamically instead of hard-coding
    # export JAVA_HOME=$(readlink -f /usr/bin/javac | sed "s:/bin/javac::")
    JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64

- name: copy sql templates
  template:
    src: "{{ role_path }}/files/webapi_link.j2"
    dest: "{{ download_dir }}/webapi_link.sql"

- name: link webapi.source and webapi.source_daimon
  command: psql ohdsi -f {{download_dir}}/webapi_link.sql
  become: true
  become_user: postgres

- name: deploy WAR
  command: "cp {{ download_dir }}/WebAPI/target/WebAPI.war /var/lib/tomcat8/webapps/"
  args:
    creates: "/var/lib/tomcat8/webapps/WebAPI.war"
  notify:
    - restart tomcat
    - wait for tomcat to come back up
    - verify WebAPI is back up

